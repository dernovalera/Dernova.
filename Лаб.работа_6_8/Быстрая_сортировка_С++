//Быстрая сортировка (Quick Sort), исходный код был написан на Java, ниже представлена его реализация на C++
#include <Windows.h>  // подключаем библиотеку для русского языка
#include <iostream>
#include <vector>

void swap(int& a, int& b) {  // функция для обмена элементов местами
    int temp = a;  // создаем переменную для значения элемента a
    a = b;  // элементу a присваивается значение элемента b
    b = temp;  // элементу b присваивается значение элемента temp (то есть a)
}

int partition(std::vector<int>& array, int low, int high) {  // функция для разбиения массива относительно опорного элемента
    int pivot = array[high]; // выбираем последний элемент как опорный
    int i = low - 1; // индекс меньшего элемента

    for (int j = low; j < high; j++) {  // в цикле перебираются все элементы слева направо
        if (array[j] <= pivot) {  // если текущий элемент меньше или равен опорному
            i++;  // увеличиваем индекс
            swap(array[i], array[j]);  // меняем местами текущий элемент с элементом на позиции i
        }
    }

    // после обхода все элементы слева <= pivot (опорного), а справа > pivot (опорного)
    swap(array[i + 1], array[high]);  // перемещаем опорный элемент на свою позицию
    return i + 1;  // возвращаем индекс опорного элемента
}

void quickSort(std::vector<int>& array, int low, int high) {  // функция для быстрой сортировки
    if (low < high) {  // проверяем, что в рассматриваемом диапазоне есть как минимум два элемента (low - индекс начала разбираемого участка массива, high - индекс конца этого участка)
        int pi = partition(array, low, high);  // разделяем массив, получая индекс опорного элемента после разбиения
        quickSort(array, low, pi - 1);  //  сортируем левую часть массива (до опорного)
        quickSort(array, pi + 1, high);  //  сортируем правую часть массива (после опорного)
    }
}

void printArray(const std::vector<int>& array) {  // вспомогательная функция для вывода массива
    for (int value : array) {  // перебираем все элементы
        std::cout << value << " ";  // выводим их с пробелом
    }
    std::cout << std::endl;  // перенос на следующую строчку
}

int main() {  // старт программы
    SetConsoleCP(65001);  // чтобы вводить на русском языке
    SetConsoleOutputCP(65001);  // чтобы выводить на русском языке
    std::vector<int> array = {10, 7, 8, 9, 1, 5};  // создаем изначальный массив

    std::cout << "Исходный массив:" << std::endl;  // выводит строчку и перекидывает на следующую строчку
    printArray(array);  // выводится исходный массив

    quickSort(array, 0, array.size() - 1);  // вызов быстрой сортировки

    std::cout << "Отсортированный массив:" << std::endl;  // выводит строчку и перекидывает на следующую строчку
    printArray(array);  // выводится отсортированный массив

    return 0;
}
